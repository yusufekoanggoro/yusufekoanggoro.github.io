{"version":3,"sources":["serviceWorker.js","screens/landingpage/NewLandingPage2.js","index.js"],"names":["Boolean","window","location","hostname","match","Panel","Collapse","require","NewLandingPage","props","scrollToTop","scroll","scrollTo","arg","scroller","duration","delay","smooth","handleClickMenu","scrollToWithContainer","Promise","resolve","reject","Events","scrollEvent","register","remove","then","containerId","menu","name","stts","indexMenuSelected","findIndex","element","setState","open","state","handleClick","console","log","date","overlayClicked","Moment","format","touchIdentifier","id","disableOverlayClick","customOnKeyDown","e","event","key","keyCode","burgerButtonClassName","overlayClassName","className","isOpen","this","pageWrapId","outerContainerId","href","map","object","index","onClick","to","spy","icon","faHeart","menuClicked","width","height","strokeWidth","rotate","color","borderRadius","animationDuration","style","textAlign","textJustify","lineColor","layout","contentStyle","background","contentArrowStyle","borderRight","iconStyle","defaultActiveKey","marginBottom","accordion","header","headerClass","target","rel","size","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.579333b1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport './NewLandingPage2.css';\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link, Element , Events, animateScroll as scroll, scroller } from 'react-scroll';\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport { DiJavascript1, DiPhp, DiMysql, DiMongodb, DiRedis, DiLinux, DiGit, DiLaravel, DiGo, DiVisualstudio, DiHtml5, DiCss3, DiBootstrap, DiDocker, DiNodejs, DiReact, DiNpm, DiDatabase, DiStackoverflow } from 'react-icons/di';\nimport {FaPencilAlt, FaFacebook, FaLinkedin, FaInstagram, FaGithub} from 'react-icons/fa';\nimport Collapse from 'rc-collapse';\nimport HamburgerMenu from 'react-hamburger-menu';\nimport { push as Menu } from 'react-burger-menu';\nimport { useSwipeable, Swipeable } from 'react-swipeable'\nimport Moment from 'moment-timezone';\nvar Panel = Collapse.Panel;\nrequire('rc-collapse/assets/index.css');\n\nclass NewLandingPage extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: Moment().format('YYYY'),\n            menu: [\n                {name: 'About', stts: 'active'},\n                {name: 'Experience', stts: ''},\n                {name: 'Education', stts: ''},\n                {name: 'Skills', stts: ''},\n                {name: 'Contact', stts: ''}\n            ],\n            open: false,\n            touchIdentifier: false\n        };\n        this.scrollToTop = this.scrollToTop();\n    }\n\n    componentWillUnmount() {\n        Events.scrollEvent.remove('begin');\n        Events.scrollEvent.remove('end');\n    }\n\n    scrollToTop = () => {\n        scroll.scrollToTop();\n    }\n\n    scrollTo = (arg) => {\n        scroller.scrollTo(arg, {\n          duration: 800,\n          delay: 0,\n          smooth: 'easeInOutQuart'\n        })\n        this.handleClickMenu(arg);\n    }\n\n    scrollToWithContainer = () => {\n\n        let goToContainer = new Promise((resolve, reject) => {\n    \n          Events.scrollEvent.register('end', () => {\n            resolve();\n            Events.scrollEvent.remove('end');\n          });\n    \n          scroller.scrollTo('scroll-container', {\n            duration: 800,\n            delay: 0,\n            smooth: 'easeInOutQuart'\n          });\n    \n        });\n    \n        goToContainer.then(() =>\n          scroller.scrollTo('scroll-container-second-element', {\n            duration: 800,\n            delay: 0,\n            smooth: 'easeInOutQuart',\n            containerId: 'scroll-container'\n          }));\n    }\n\n    handleClickMenu = (arg) => { \n        const menu= [\n            {name: 'About', stts: ''},\n            {name: 'Experience', stts: ''},\n            {name: 'Education', stts: ''},\n            {name: 'Skills', stts: ''},\n            {name: 'Contact', stts: ''}\n        ];\n        const indexMenuSelected = menu.findIndex( (element) => element.name === arg);\n        menu[indexMenuSelected] = 'Active'\n\n        this.setState({menu,open: !this.state.open});\n    }\n\n    handleClick = () => {\n        this.setState({\n            open: !this.state.open\n        });\n        console.log(this.state.date)\n    }\n    overlayClicked = () => {\n        this.setState({\n            open: !this.state.open\n        });\n    }\n    \n\n    render(){\n        const closeAllMenusOnEsc = (e) => {\n            e = e || window.event;\n            if (e.key === 'Escape' || e.keyCode === 27) {\n              this.setState({open: false});\n            }\n        };\n        return (\n            <div id=\"outer-container\">\n                <Menu disableOverlayClick={() => this.overlayClicked()} customOnKeyDown={closeAllMenusOnEsc} burgerButtonClassName={ \"button-ganggu\" } overlayClassName={'overlay-ganggu'} className={ \"my-menu\" }  isOpen={this.state.open} pageWrapId={ 'page-wrap' } outerContainerId={ \"outer-container\" }>\n                    <aside>\n                        <div className='text-center'>\n                            <div className='author-img'></div>\n                            <h1 className='full-name'>\n                                <a>Yusuf Eko Anggoro</a>\n                            </h1>\n                            <span className=\"position\"><a href=\"#\">Backend Dev</a> at Telkom ID</span>\n                        </div>\n                        <div className='nav'>\n                            <ul>\n                                {\n                                    this.state.menu.map((object, index) => {\n                                        return(\n                                            <li>\n                                                <Link onClick={() => this.handleClick()} className=\"anchor\" to={object.name} spy={true} smooth={true} duration={500}>{object.name}</Link>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                        <div className='footer'>\n                        <p>\n                            <small>\n                                &copy;Copyright {this.state.date} All rights reserved | This web is made with <FontAwesomeIcon icon={faHeart} /> by <a>Yusuf</a>\n                            </small>\n                        </p>\n                    </div>\n                    </aside>\n                </Menu>\n                <div className='my-container' id=\"page-wrap\">\n                    <aside>\n                        <div className='text-center'>\n                            <div className='author-img'></div>\n                            <h1 className='full-name'>\n                                <a>Yusuf Eko Anggoro</a>\n                            </h1>\n                            <span className=\"position\"><a href=\"#\">Backend Dev</a> at Telkom ID</span>\n                        </div>\n                        <div className='nav'>\n                            <ul>\n                                {\n                                    this.state.menu.map((object, index) => {\n                                        return(\n                                            <li>\n                                                <Link  className=\"anchor\" to={object.name} spy={true} smooth={true} duration={500}>{object.name}</Link>\n                                            </li>\n                                        )\n                                    })\n                                }\n                            </ul>\n                        </div>\n                        <div className='footer'>\n                            <p>\n                                <small>\n                                    &copy;Copyright {this.state.date} All rights reserved | This web is made with <FontAwesomeIcon icon={faHeart} /> by <a>Yusuf</a>\n                                </small>\n                            </p>\n                        </div>\n                    </aside>  \n                    <main>\n                        <div className='burger'>\n                            <HamburgerMenu\n                                isOpen={this.state.open}\n                                menuClicked={() => this.handleClick()}\n                                width={18}\n                                height={15}\n                                strokeWidth={1}\n                                rotate={0}\n                                color='black'\n                                borderRadius={0}\n                                animationDuration={0.5}\n                            />\n                        </div>\n                        <Element name=\"About\" className=\"about-wrap\">\n                            <h2 className=\"heading-meta\">About Us</h2>\n                            <div className='desc'>\n                                <p style={{textAlign: 'justify', textJustify: 'inter-word'}}>\n                                    <strong>Hi, I'm Yusuf Eko Anggoro</strong> or commonly called Ucup.\n                                    I am a back-end developer with 3+ years of experience building, developing, implementing <strong>Test Driven Development</strong>, and maintaining.\n                                    I love everything about code, I really enjoy learning new things, especially about the latest technology.\n                                    My current back-end language is <strong>PHP</strong>, <strong>JavaScript</strong> and <strong>Golang</strong>.\n                                </p>\n                            </div>\n                        </Element>\n                        <Element name=\"Experience\" className=\"experience-wrap\">\n                            <h2 className=\"heading-meta\">Experience</h2>\n                            <VerticalTimeline lineColor=\"#f2f3f7\" layout=\"1-column-left\">\n                            <VerticalTimelineElement\n                                    className=\"vertical-timeline-element--work\"\n                                    contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                                    contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                                    date=\"2019 - present\"\n                                    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                                    icon={<FaPencilAlt/>}\n                                >\n                                    <h5 className=\"vertical-timeline-element-title\">Back-End Developer at Telkom Indonesia</h5>\n                                    <p>\n                                        <ul style={{textAlign: 'justify', textJustify: 'inter-word'}}>\n                                            <li>\n                                                Building, developing, implementing Test Driven Development, analysis and maintaining microservices architecture such as gamification service, ticket service, notification service, user service and worker service. RESTful APIs or Apache Kafka function as the glue that integrates the microservices into application.\n                                            </li>\n                                            <li>\n                                                Skill in reading technical documentation and back-end integration with third-parties.\n                                            </li>\n                                            <li>Utilitized OpenShift to configure and deploy applications.</li>\n                                            <li>Worked on NoSQL and SQL databases like MongoDB and Oracle.</li>\n                                            <li>Experience with container-based deployment using Jenkins and Docker.</li>\n                                            <li>Used Apache Kafka for Publish/Subscribe pattern in applications dealing with messaging.</li>\n                                            <li>Used GIT for version control.</li>\n                                            <li>Experience in Agile Development process with Atlassian Jira.</li>\n                                            <li>Implementing best practices way.</li>\n                                            <li>With caching (Redis), ELK stack (Elasticsearch, Logstash, Kibana).</li>\n                                            <li>Used MinIO for enterprise file storage.</li>\n                                        </ul>\n                                    </p>\n                                </VerticalTimelineElement>\n                                <VerticalTimelineElement\n                                    className=\"vertical-timeline-element--work\"\n                                    contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                                    contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                                    date=\"2019\"\n                                    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                                    icon={<FaPencilAlt/>}\n                                >\n                                    <h5 className=\"vertical-timeline-element-title\">Graduated as Full Stack Developer at Arkademy</h5>\n                                    <p style={{textAlign: 'justify', textJustify: 'inter-word'}}>Focus on mobile development with react native and Node.js.</p>\n                                </VerticalTimelineElement>\n                            </VerticalTimeline>\n                        </Element>\n                        <Element name=\"Education\" className=\"education-wrap\">\n                            <h2 className=\"heading-meta\">Education</h2>\n                            <Collapse defaultActiveKey=\"0\" style={{marginBottom: '7px'}} accordion={true}>\n                                <Panel style={{textAlign: 'justify', textJustify: 'inter-word'}} header=\"Indraprasta PGRI University\" headerClass=\"my-header-class\">Coming Soon</Panel>\n                            </Collapse>\n                            <Collapse defaultActiveKey=\"0\" accordion={true}>\n                                <Panel style={{textAlign: 'justify', textJustify: 'inter-word'}} header=\"[Graduated] Vocational High School 24 Jakarta\" headerClass=\"my-header-class\">\n                                    Learn and explore all the ways of software development including making software, maintenance, software development organization management and quality management. Not only that, I also learned computer software from making websites, applications and everything related to programming by mastering the programming language.\n                                </Panel>\n                            </Collapse>\n                        </Element>\n                        <Element name=\"Skills\" className=\"skills-wrap\">\n                            <h2 className=\"heading-meta\">My Skills</h2>\n                            <Collapse defaultActiveKey=\"0\" accordion={true} style={{marginBottom: '7px'}}>\n                                <Panel header=\"Back-End\" headerClass=\"my-header-class backend\">\n                                    <p>\n                                        <ul style={{textAlign: 'justify', textJustify: 'inter-word'}}>\n                                            <li>Programming Languages: PHP, Javascript, Golang</li>\n                                            <li>Back-end Technologies: Express.js, Golang, Laravel</li>\n                                            <li>Development Tools (IDEs): Visual Studio Code</li>\n                                            <li>Version Control: GIT</li>\n                                            <li>RDBMS: MySQL, Oracle, PostgreSQL</li>\n                                            <li>NoSQL: MongoDB</li>\n                                            <li>Platforms: Windows, Linux</li>\n                                            <li>Methodologies: Agile and Waterfall Methodology</li>\n                                            <li>Build Tools: Jenkins CI/CD</li>\n                                        </ul>\n                                    </p>\n                                </Panel>\n                            </Collapse>\n                        </Element>\n                        <Element name=\"Contact\" className=\"contact-wrap\">\n                            <div className='contact'>\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://web.facebook.com/yusuf.e.3591\">\n                                    <FaFacebook color='#385898' size={35} />\n                                </a>\n                            </div>\n                            <div className='contact'>\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/yousufe24/\"><FaLinkedin className='linkedin' color='#0077B5' size={35} /></a>\n                            </div>\n                            <div className='contact'>\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.instagram.com/yousufe24/\"><FaInstagram className='ig' color='red' size={35} /></a>\n                            </div>\n                            <div className='contact'>\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/yusufekoanggoro\"><FaGithub color=\"black\" size={35} /></a>\n                            </div>\n                        </Element>\n                    </main>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default NewLandingPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-vertical-timeline-component/style.min.css';\nimport LandingPage from './screens/landingpage/NewLandingPage2';\n\nReactDOM.render(<LandingPage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}