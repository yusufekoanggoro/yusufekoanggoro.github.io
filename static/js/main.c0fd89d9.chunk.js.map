{"version":3,"sources":["serviceWorker.js","screens/landingpage/NewLandingPage.js","index.js"],"names":["Boolean","window","location","hostname","match","NewLandingPage","props","scrollToTop","scroll","scrollTo","arg","scroller","duration","delay","smooth","handleClickMenu","scrollToWithContainer","Promise","resolve","reject","Events","scrollEvent","register","remove","then","containerId","menu","name","stts","setState","state","date","Date","className","href","this","map","object","index","to","spy","icon","faHeart","size","contentStyle","background","color","contentArrowStyle","borderRight","iconStyle","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c0fd89d9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from 'react';\nimport {\n    Container,\n    Row,\n    Col,\n} from 'react-bootstrap';\nimport './NewLandingPage.css';\nimport { faHeart, faNetworkWired } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Link, Element , Events, animateScroll as scroll, scroller } from 'react-scroll';\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\nimport { DiJavascript1, DiPhp, DiMysql, DiMongodb, DiRedis, DiLinux, DiGit, DiLaravel, DiGo, DiVisualstudio, DiHtml5, DiCss3, DiBootstrap, DiDocker, DiNodejs, DiReact, DiNpm } from 'react-icons/di';\nimport {FaPencilAlt} from 'react-icons/fa';\n\n\nclass NewLandingPage extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: new Date(),\n            menu: [\n                {name: 'About', stts: 'active'},\n                {name: 'Skills', stts: ''},\n                {name: 'Education', stts: ''},\n                {name: 'Experience', stts: ''},\n                {name: 'Contact', stts: ''}\n            ]\n        };\n        this.scrollToTop = this.scrollToTop();\n    }\n\n    componentWillUnmount() {\n        Events.scrollEvent.remove('begin');\n        Events.scrollEvent.remove('end');\n    }\n\n    scrollToTop = () => {\n        scroll.scrollToTop();\n    }\n\n    scrollTo = (arg) => {\n        scroller.scrollTo(arg, {\n          duration: 800,\n          delay: 0,\n          smooth: 'easeInOutQuart'\n        })\n        this.handleClickMenu(arg);\n    }\n\n    scrollToWithContainer = () => {\n\n        let goToContainer = new Promise((resolve, reject) => {\n    \n          Events.scrollEvent.register('end', () => {\n            resolve();\n            Events.scrollEvent.remove('end');\n          });\n    \n          scroller.scrollTo('scroll-container', {\n            duration: 800,\n            delay: 0,\n            smooth: 'easeInOutQuart'\n          });\n    \n        });\n    \n        goToContainer.then(() =>\n          scroller.scrollTo('scroll-container-second-element', {\n            duration: 800,\n            delay: 0,\n            smooth: 'easeInOutQuart',\n            containerId: 'scroll-container'\n          }));\n    }\n\n    handleClickMenu = (arg) => { \n        const menu= [\n            {name: \"About\", stts: \"\"},\n            {name: \"Education\", stts: \"\"},\n            {name: \"Experience\", stts: \"\"},\n            {name: \"Contact\", stts: \"\"}\n        ];\n        if(arg === \"About\"){\n            menu[0].stts = \"active\"\n        }else if(arg === \"Skills\"){\n            menu[1].stts = \"active\"\n        }else if(arg === \"Education\"){\n            menu[2].stts = \"active\"\n        }else if(arg === \"Experience\"){\n            menu[3].stts = \"active\"\n        }else if(arg === \"Contact\"){\n            menu[4].stts = \"active\"\n        }\n        this.setState({menu});\n    }\n\n    render(){\n        return (\n            <div className='my-container'>\n                <aside>\n                    <div className='text-center'>\n                        <div className='author-img'></div>\n                        <h1 className='full-name'>\n                            <a>Yusuf Eko Anggoro</a>\n                        </h1>\n                        <span className=\"position\"><a href=\"#\">Back-end Developer </a> at Telkom</span>\n                    </div>\n                    <div className='nav'>\n                        <ul>\n                            {\n                                this.state.menu.map((object, index) => {\n                                    return(\n                                        <li>\n                                            <Link className=\"anchor\" to={object.name} spy={true} smooth={true} duration={500}>{object.name}</Link>\n                                        </li>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                    <div className='footer'>\n                        <p>\n                            <small>\n                                &copy;Copyright 2020 All rights reserved | This template is made with <FontAwesomeIcon icon={faHeart} /> by <a href=\"https://colorlib.com\">Yusuf Eko Anggoro</a>\n                            </small>\n                        </p>\n                    </div>\n                </aside>\n                <main>\n                    <Element name=\"About\" className=\"element1\">\n                        <h2 className=\"heading-meta\">About Us</h2>\n                        <div className='desc'>\n                            <p><strong>Hi I'm Yusuf Eko Anggoro</strong> On her way she met a copy. The copy warned the Little Blind Text, that where it came from it would have been rewritten a thousand times and everything that was left from its origin would be the word \"and\" and the Little Blind Text should turn around and return to its own, safe country.</p>\n                            <p>Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar.</p>\n                        </div>\n                    </Element>\n                    <Element name=\"Skills\" className=\"element2\">\n                        <h2 className=\"heading-meta\">My Skills</h2>\n                        <div className='my-skills'>\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                            <DiPhp size={150} />\n                        </div>\n                    </Element>\n                    <Element name=\"Experience\" className=\"element4\">\n                        <h2 className=\"heading-meta\">Experience</h2>\n                        <VerticalTimeline>\n                            <VerticalTimelineElement\n                                className=\"vertical-timeline-element--work\"\n                                contentStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                                contentArrowStyle={{ borderRight: '7px solid  rgb(33, 150, 243)' }}\n                                date=\"2019 - present\"\n                                iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n                                icon={<FaPencilAlt/>}\n                            >\n                                <h3 className=\"vertical-timeline-element-title\">Creative Director</h3>\n                                <h4 className=\"vertical-timeline-element-subtitle\">Miami, FL</h4>\n                                <p>\n                                    Creative Direction, User Experience, Visual Design, Project Management, Team Leading\n                                </p>\n                            </VerticalTimelineElement>\n                        </VerticalTimeline>\n                    </Element>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default NewLandingPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-vertical-timeline-component/style.min.css';\nimport LandingPage from './screens/landingpage/NewLandingPage';\n\nReactDOM.render(<LandingPage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}